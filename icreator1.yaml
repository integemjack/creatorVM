# ---
# apiVersion: v1
# kind: Namespace
# metadata:
#   name: icreator

# ---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: icreator-boostrap
#   namespace: icreator

# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: icreator-boostrap-crb
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: cluster-admin
# subjects:
# - kind: ServiceAccount
#   name: icreator-boostrap
#   namespace: icreator


---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/name: icreator
  name: icreator
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: icreator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: icreator
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
              weight: 100
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
              weight: 100
      containers:
        - env:
            - name: HOSTIP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          envFrom:
            - configMapRef:
                name: icreator-config
          image: 'integem/creatorvm'
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: icreator
          ports:
            - containerPort: 80
              name: web
              protocol: TCP
            - containerPort: 443
              name: https
              protocol: TCP
            - containerPort: 5900
              name: vnc
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          # startupProbe:
          #   failureThreshold: 20
          #   httpGet:
          #     path: /icreator-resources/version.json
          #     port: 80
          #     scheme: HTTP
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          #   successThreshold: 1
          #   timeoutSeconds: 1
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccount: icreator-boostrap
      serviceAccountName: icreator-boostrap
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists

---
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/name: icreator
  name: icreator
  namespace: icreator
spec:
  ports:
    - name: web
      port: 80
      protocol: TCP
      targetPort: 80
    - name: webs
      port: 443
      protocol: TCP
      targetPort: 443
    - name: vnc
      port: 5900
      protocol: TCP
      targetPort: 5900
  selector:
    app.kubernetes.io/name: icreator
  sessionAffinity: None
  type: LoadBalancer

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: icreator
spec:
  rules:
    - host: kubernete.integem.co
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: icreator
                port:
                  number: 80
          - path: /
            pathType: Prefix
            backend:
              service:
                name: icreator
                port:
                  number: 443

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kuboard-v3
spec:
  rules:
    - host: k8s.clashrauto.xyz
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kuboard-v3
                port:
                  number: 80